<resources>
    <string name="app_name" translatable="false">Barabashka_game</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment" translatable="false">Hello blank fragment</string>
    <string name="large_text" translatable="false">
        "Material is the metaphor.\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>
    <string name="Game_rules">У вас на экране имеются определенные фигуры с разными характерными чертами(Например, синий
        треугольник, оранжевый квадрат и т.д.), будем называть их объекты. Когда игра начнется, у вас на экране будут
        появляться объекты с определенными характеристиками. Ваша задача в зависимости от появившейся объекта, нажать на
        один из своих по одному из условий:\n* Если у вас имеется объект, который полностью соответствует появившемуся,
        необходимо выбрать такой же объект \n* Если у вас нет точно такого же объекта, необходимо выбрать объект,
        который
        будет отличаться по всем параметрам от появившегося
    </string>
    <string name="close">Закрыть</string>
    <string name="title_activity_settings" translatable="false">SettingsActivity</string>

    <!-- Preference Titles -->
    <string name="messages_header" translatable="false">Messages</string>
    <string name="sync_header" translatable="false">Sync</string>

    <!-- Messages Preferences -->
    <string name="signature_title" translatable="false">Your signature</string>
    <string name="reply_title" translatable="false">Default reply action</string>

    <!-- Sync Preferences -->
    <string name="sync_title" translatable="false">Sync email periodically</string>
    <string name="attachment_title" translatable="false">Download incoming attachments</string>
    <string name="attachment_summary_on" translatable="false">Automatically download attachments for incoming emails
    </string>
    <string name="attachment_summary_off" translatable="false">Only download attachments when manually requested
    </string>
    <string name="game_name" translatable="false">Barabashka Game</string>
    <string name="play">Играть</string>
    <string name="history">История</string>
    <string name="rules">Правила</string>
    <string name="exit">Выход</string>
    <string name="game_over">Игра Окончена</string>
    <string name="share_res">Поделиться результатом</string>
    <string name="back_to_menu">Вернуться в меню</string>
    <string name="winner">Победитель:</string>
    <string name="menu">Меню</string>
    <string name="params">Параметры игры</string>
    <string name="player1_n">Имя игрока 1</string>
    <string name="player2_n">Имя игрока 2</string>
    <string name="end_points">Количество очков для победы</string>
    <string name="start">Начать игру</string>
    <string name="history_of_matches">История матчей</string>
    <string name="game_rules">Правила игры</string>
    <string name="resume_game">Продолжить игру</string>
    <string name="exit_to_menu">Выход в меню</string>
    <string name="loading">Загрузка</string>
    <string name="dialog_exit">Вы уверены, что хотите выйти?</string>
    <string name="yes">Да</string>
    <string name="no">Нет</string>
    <string name="back">Назад в меню</string>
    <string name="clear_h">История очищена</string>
    <string name="set_new_lang">Установлен новый язык</string>
    <string name="set_ten">10 установлено конечным счетом</string>
    <string name="set_15">15 установлено конечным счетом</string>
    <string name="set_20">20 установлено конечным счетом</string>
    <string name="set_25">25 установлено конечным счетом</string>
    <string name="players_need_names">У игроков обязательно должны быть имена</string>
    <string name="cl_h">Очистить историю</string>
    <string name="welcome">Добро пожаловать</string>
    <string name="share_r">\" одержал победу в игре Barabashka Game. ЭТО ОЧЕНЬ КРУТАЯ ИГРА, попробуй и ты\"</string>
    <string name="less_symbols">Имя игрока должно содержать меньше 10 символов</string>
    <string name="ru_lang">Русский</string>
    <string name="en_lang">Английский</string>
    <string name="game_tutor">Руководство по игре</string>
    <string name="Win_name">Призёр</string>
    <string name="Score1">Счёт 1</string>
    <string name="Score2">Счет 2</string>
    <string name="date">Дата</string>
</resources>